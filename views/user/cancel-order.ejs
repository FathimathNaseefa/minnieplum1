<!DOCTYPE html>
<html lang="en">
<head>
    <title>Order Cancellation</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                <h5>Cancel Order</h5>
            </div>
            <div class="card-body">
                <form id="cancelForm">
                    <div class="mb-3">
                        <label for="reason" class="form-label">Select Cancellation Reason:</label>
                        <select id="reason" class="form-select" required>
                            <option value="">Choose a reason...</option>
                            <option value="Changed my mind">Changed my mind</option>
                            <option value="Ordered by mistake">Ordered by mistake</option>
                            <option value="Found a better price">Found a better price</option>
                            <option value="Item not needed anymore">Item not needed anymore</option>
                            <option value="Delay in delivery">Delay in delivery</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-danger">Cancel Order</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.getElementById("cancelForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            
            const reason = document.getElementById("reason").value;
            const orderId = "<%= order ? order.orderId : '' %>"; // Use orderId from the backend
            const paymentMethod = "<%= order ? order.paymentMethod : '' %>"; // Use paymentMethod from the backend

            console.log("Order ID in frontend:", orderId);

            if (!orderId) {
                Swal.fire("Error!", "Order ID is missing.", "error");
                return;
            }

            // Send cancellation request to the server
            const response = await fetch("/cancel-order", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId, reason })
            });

            const data = await response.json();

            if (data.success) {
                if (data.requiresConfirmation) {
                    // Show refund confirmation for Razorpay payments
                    Swal.fire({
                        title: "Refund Confirmation",
                        text: data.message,
                        icon: "info",
                        showCancelButton: true,
                        confirmButtonText: "Confirm Cancellation",
                        cancelButtonText: "Go Back"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Proceed with cancellation
                            fetch("/confirm-cancel-order", {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({ orderId, reason })
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: "Order Cancelled",
                                        text: data.message,
                                        icon: "success",
                                    }).then(() => {
                                        window.location.href = "/userProfile";
                                    });
                                } else {
                                    Swal.fire("Error!", data.message, "error");
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);
                                Swal.fire("Error!", "Something went wrong.", "error");
                            });
                        }
                    });
                } else {
                    // Direct cancellation for COD payments
                    Swal.fire({
                        title: "Order Cancelled",
                        text: data.message,
                        icon: "success",
                    }).then(() => {
                        window.location.href = "/userProfile";
                    });
                }
            } else {
                Swal.fire("Error!", data.message, "error");
            }
        });
    </script>
</body>
</html>