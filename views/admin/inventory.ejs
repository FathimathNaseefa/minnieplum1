<%- include("../../views/partials/admin/header") %>
<style>/* Table Styles */
    .table {
        width: 80%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    
        .breadcrumb {
    display: flex;
    align-items: center;
    justify-content: start;
    list-style: none;
    padding: 10px 20px;
    margin: 0;
    background-color: #ccd6f5; /* Light gray background */
    border-radius: 5px; /* Rounded corners */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow for a navbar feel */
    font-size: 0.9rem;
}

.breadcrumb-item {
    color: #6c757d; /* Default gray text */
    margin-right: 10px; /* Space between items */
    font-weight: 500; /* Slightly bold text */
}

.breadcrumb-item a {
    text-decoration: none;
    color: #007bff; /* Blue for links */
    transition: color 0.2s ease-in-out;
}

.breadcrumb-item a:hover {
    color: #0056b3; /* Darker blue on hover */
}

.breadcrumb-item + .breadcrumb-item::before {
    content: '>'; /* Use '>' as a separator for a navigation bar look */
    margin-right: 10px;
    color: #6c757d; /* Gray for the separator */
}

.breadcrumb-item.active {
    color: #495057; /* Dark gray for the current page */
    font-weight: bold;
    pointer-events: none; /* Make the active page unclickable */
}
h1{
    text-align: center;
}
.table{
    margin: auto; text-align: center; width: 80%;
}
    
    /* Table Header */
    .table thead {
        background-color: #007bff;
        color: white;
        text-align: left;
    }
    
    .table th, 
    .table td {
        padding: 12px;
        border-bottom: 1px solid #ddd;
    }
    
    /* Alternate Row Colors */
    .table tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }
    
    /* Input Field Styles */
    input[type="number"] {
        width: 80px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
    
    /* Button Styling */
    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        transition: background 0.3s;
    }
    
    .btn-primary:hover {
        background-color: #0056b3;
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
        .table {
            font-size: 14px;
        }
    
        input[type="number"] {
            width: 60px;
        }
    
        .btn-primary {
            padding: 5px 10px;
            font-size: 12px;
        }
    }
    .pagination {
    display: flex;
    justify-content: center;  /* Center horizontally */
    align-items: center;      /* Align items in the center */
    gap: 10px;                /* Add space between elements */
    margin-top: 20px;
}

.pagination a {
    display: inline-block;
    padding: 10px 15px;
    text-decoration: none;
    background-color: #007bff;
    color: white;
    border-radius: 5px;
    transition: background-color 0.3s;
}

.pagination a:hover {
    background-color: #0056b3;
}

.pagination .current-page {
    
    font-size: 16px;
}

.pagination a.active {
    background-color: #0056b3;

}

.pagination a:hover {
    background-color: #0056b3;
}

.prev-btn, .next-btn {
    font-weight: bold;
}

</style>   


<h1 >Inventory</h1>
<table class="table">
    <thead>
      <tr>
        <th>Product</th>
        <th>Size</th>
        <th>Color</th>
        <th>Stock Quantity</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% inventory.forEach((item) => { %>
        <tr>
          <td><%= item.productName %></td>
          <td><%= item.size %></td>
          <td><%= item.color %></td>
          <td><%= item.stock %></td>
          <td>
            <form action="/admin/update-stock" method="POST">
              <input type="hidden" name="productId" value="<%= item._id %>">
              <input type="number" name="newStock" min="0" value="<%= item.stock %>">
              <button type="submit" class="btn btn-primary">Update</button>
            </form> 
            
            
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>
  
  <script>
    
   document.addEventListener("DOMContentLoaded", function () {
    const rowsPerPage = 5; // Change as needed
    const rows = document.querySelectorAll("tbody tr");
    const totalPages = Math.ceil(rows.length / rowsPerPage);
    let currentPage = 1;

    function showPage(page) {
        rows.forEach((row, index) => {
            row.style.display = (index >= (page - 1) * rowsPerPage && index < page * rowsPerPage) ? "table-row" : "none";
        });
    }

    function createPagination() {
        const paginationDiv = document.createElement("div");
        paginationDiv.classList.add("pagination");

        const prevBtn = document.createElement("a");
        prevBtn.href = "#";
        prevBtn.textContent = "Previous";
        prevBtn.classList.add("prev-btn");
        prevBtn.style.display = currentPage === 1 ? "none" : "inline-block";
        prevBtn.addEventListener("click", function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                updatePagination();
            }
        });

        const pageInfo = document.createElement("span");
        pageInfo.classList.add("current-page");
        pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;

        const nextBtn = document.createElement("a");
        nextBtn.href = "#";
        nextBtn.textContent = "Next";
        nextBtn.classList.add("next-btn");
        nextBtn.style.display = currentPage === totalPages ? "none" : "inline-block";
        nextBtn.addEventListener("click", function (e) {
            e.preventDefault();
            if (currentPage < totalPages) {
                currentPage++;
                updatePagination();
            }
        });

        paginationDiv.appendChild(prevBtn);
        paginationDiv.appendChild(pageInfo);
        paginationDiv.appendChild(nextBtn);

        document.querySelector(".table").after(paginationDiv);
    }

    function updatePagination() {
        showPage(currentPage);
        document.querySelector(".current-page").textContent = `Page ${currentPage} of ${totalPages}`;

        document.querySelector(".prev-btn").style.display = currentPage === 1 ? "none" : "inline-block";
        document.querySelector(".next-btn").style.display = currentPage === totalPages ? "none" : "inline-block";
    }

    showPage(currentPage);
    if (totalPages > 1) createPagination();
});

</script>

  <%- include("../../views/partials/admin/footer") %>
  